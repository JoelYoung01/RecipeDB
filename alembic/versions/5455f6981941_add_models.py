"""add_models

Revision ID: 5455f6981941
Revises: 8a9ec8cf53ba
Create Date: 2025-02-21 20:01:04.115799

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import api


# revision identifiers, used by Alembic.
revision: str = '5455f6981941'
down_revision: Union[str, None] = '8a9ec8cf53ba'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_permission'))
    )
    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_permission_id'), ['id'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('disabled', sa.Boolean(), nullable=False),
    sa.Column('google_user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_login', api.core.timezone_handler.UTCDateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_id'), ['id'], unique=False)

    op.create_table('recipe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_on', api.core.timezone_handler.UTCDateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('instructions', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('prep_time', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name=op.f('fk_recipe_created_by_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recipe'))
    )
    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_recipe_id'), ['id'], unique=False)

    op.create_table('token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('token_type', sa.Enum('Access', name='tokentype'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_token_user_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_token'))
    )
    with op.batch_alter_table('token', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_token_id'), ['id'], unique=False)

    op.create_table('upload',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_on', api.core.timezone_handler.UTCDateTime(), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name=op.f('fk_upload_created_by_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_upload'))
    )
    with op.batch_alter_table('upload', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_upload_id'), ['id'], unique=False)

    op.create_table('user_permission',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], name=op.f('fk_user_permission_permission_id_permission')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_permission_user_id_user')),
    sa.PrimaryKeyConstraint('user_id', 'permission_id', name=op.f('pk_user_permission'))
    )
    op.create_table('ingredient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_on', api.core.timezone_handler.UTCDateTime(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('units', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('details', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name=op.f('fk_ingredient_created_by_id_user')),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name=op.f('fk_ingredient_recipe_id_recipe')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ingredient'))
    )
    with op.batch_alter_table('ingredient', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_ingredient_id'), ['id'], unique=False)

    op.create_table('plannedrecipe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('created_on', api.core.timezone_handler.UTCDateTime(), nullable=False),
    sa.Column('planned_for', api.core.timezone_handler.UTCDateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name=op.f('fk_plannedrecipe_created_by_id_user')),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name=op.f('fk_plannedrecipe_recipe_id_recipe')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_plannedrecipe'))
    )
    with op.batch_alter_table('plannedrecipe', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_plannedrecipe_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('plannedrecipe', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_plannedrecipe_id'))

    op.drop_table('plannedrecipe')
    with op.batch_alter_table('ingredient', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_ingredient_id'))

    op.drop_table('ingredient')
    op.drop_table('user_permission')
    with op.batch_alter_table('upload', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_upload_id'))

    op.drop_table('upload')
    with op.batch_alter_table('token', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_token_id'))

    op.drop_table('token')
    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_recipe_id'))

    op.drop_table('recipe')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_id'))

    op.drop_table('user')
    with op.batch_alter_table('permission', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_permission_id'))

    op.drop_table('permission')
    # ### end Alembic commands ###
